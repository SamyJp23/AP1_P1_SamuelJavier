@page "/Articulo/Create/"
@page "/Articulo/Create/{ArticuloId:int}"
@inject ArticulosServices articuloService
@rendermode InteractiveServer

<EditForm Model="Articulos" @OnInvalidSubmit="Guardar">
    <DataAnnotationsValidator/>

    <div class="card shadow-lg border 0 rounded" style="background-color: #f8f9fa;"
    <div class="card-header bg-primary text-white rounded" style="text-align: center;"
    <h3 <i class="fas fa-clipboard-list"></i>Registro</h3>
        </div>
        <div class="card-body"
         <div class="row">
                <div class="col-md-6 mb-3">
                    <label for="ArticuloId" class="form-label">ArticuloId:</label>
                    <div class="input-group">
                        <div style="width: 40%; height: 1em;">
                            <InputNumber @bind-Value="Articulos.IdArticulo" class="form-control" style="font-size: 0.8em;" />
                            <ValidationMessage For="@(() => Articulos.IdArticulo)" />

                        </div>
                    </div>
                                                          
                </div>
                          <div class="mb-3">

                            <label for="Descripcion" class="form-label">Descripcion:</label>
                               <InputText @bind-Value="Articulos.Descripcion" class="form-control" />
                                <ValidationMessage For="@(() => Articulos.Descripcion)" />

                          </div>
                      </div>
                                        <div class="mb-3">
                                              <label for="" class="form-label">Descripcion:</label>
                                                  <InputNumber @bind-Value="Articulos.Costo" class="form-control" />
                                                       <ValidationMessage For="@(() => Articulos.Costo)" />
                                        </div>

                                               <div class="mb-3">
                                                   <label for="Ganancia" class="form-label">Ganancia:</label>
                                                    <InputNumber @bind-Value="Articulos.Ganancia" class="form-control" />
                                                      <ValidationMessage For="@(() => Articulos.Ganancia)" />
                                               </div>
                                                          <div class="mb-3">
                                                               <label for="Precio" class="form-label">Precio:</label>
                                                                 <InputNumber @bind-Value="Articulos.Precio" class="form-control" />
                                                                   <ValidationMessage For="@(() => Articulos.Precio)" />


                                                          </div>
                                                          </div>
                                                          <div class="card-footer d-flex justify-content-center"
                                                           <div class="btn-group"
                                                            <button type="button" @onclick="Nuevo" class="btn btn-outline-primary"><span class="bi bi-plus"></span> Nuevo </button>
                                                            <button  type ="succes" class="btn btn-outline-success"><span class="bi bi-floppy"></span> Guardar </button>
                                                            <a  href="/Articulo/Index/" class="btn btn-outline-danger"><span class="bi bi-plus"></span> Retroceder </a>
                                                           </div>
                                                          </div>
   </div>
</EditForm>

@code {
    [Parameter]
    public int ArticuloId{get;set;}
    public int? articuloId{ get; set; }
    public Articulos Articulos { get; set; } = new Articulos();
    [Inject] protected ToastService toastService { get; set; }

    public void NotificacionGuardo()
    {
        toastService.Notify(new(ToastType.Success, $"Se guardo correctamente"));
    }

    public void NotificacionError()
    {
        toastService.Notify(new(ToastType.Danger, $"Error"));
    }
    public async void Guardar()
    {
        if(await Validar())
        {
            NotificacionError();
            return;
        }
        var guardo = await articuloService.Guardar(Articulos);
        if (guardo)
        {
            NotificacionGuardo();
            Nuevo();
        }
    }

    public async Task<bool> Validar()
    {
        var existeDescripcion = await articuloService.ExisteDescripcion(Articulos.Descripcion,Articulos.IdArticulo);
        return existeDescripcion;
    }
    public void Nuevo()
    {
        this.Articulos = new Articulos();
    }
}
